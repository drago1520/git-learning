git stash 
git stash list
git stash pop - последното маха (Не е добра практика)
Добра практика:
git stash apply <число>
git stash drop <число> 

git status 

UNDO after commit & Unstage:

git restore <име на файл> - връща последния commit
git restore --staged <име на файл> - маха от staging area.

Log commits [EASY]:
git log --oneline

Compare changes:

git diff 
git diff [first commit] [second commit]

Branches:
git branch - като git log (-v detailed info for all branched)

git fetch --all
git branch -r - Виж remote branches

git branch <branchName> - нов клон

git checkout <main branch to merge>
git merge <secondary branch to merge>

git branch -d <branch> - Delete branch (-D = force)
git push origin --delete <branch> - Delete branch remotely

git branch -M <branch> - rename branch

Pull:
git checkout <branch> - в коя локална ще дърпам
git pull origin <remote branch> - от коя ще дърпам

*--allow-unrelated-histories - fatal: refusing to merge unrelated histories

Merge:
git checkout <main branch to merge>
git merge <secondary branch to merge>

git branch --merged
git branch --no-merged - Стои си без да се изполва. Трябва да я присъединя

Shortcuts:
git add .
git commit -m "<Detailed commit message>"
vs
git commit -am "<Detailed commit message>" - ONLY if already tracked, i.e. made at least once with git add .

git branch <branch>
git checkout <branch>
vs
git checkout -b <branch>

Connect remote repo:

git remote add origin main - 
git push -u origin main - -u Задължително първия път. Започва да следи upstream dx!

Squash:
git rebase -i <commit/ relative HEAD~#> - трябва hash преди първия squash.

Delete commit:
git revert <commit/ relative HEAD~#> - кой да изтрие?